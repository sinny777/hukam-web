{"ast":null,"code":"// import { Http, Headers, Response, RequestOptions } from '@angular/http';\nimport { HttpHeaders } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\n// import 'rxjs/add/operator/map';\n// import { map, toPromise } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CommonService = /*#__PURE__*/(() => {\n  class CommonService {\n    refreshHeaders() {\n      this.headers = new HttpHeaders();\n      this.headers.append('Content-Type', 'application/json');\n      this.headers.append('Accept', 'application/json');\n      this.headers.append('X-IBM-Client-Id', 'default');\n      this.headers.append('X-IBM-Client-Secret', 'SECRET');\n    }\n    constructor(http) {\n      this.http = http;\n      this.refreshHeaders();\n    }\n    sendEmail(payload) {\n      console.log('IN commonService.sendEmail: >>> ', payload);\n      const POST_URL = environment.API_BASE_URL + '/Notifications/email';\n      if (!payload || !payload.from || !payload.to) {\n        return Promise.reject('INVALID DATA FOR SENDING EMAIL !');\n      } else {\n        this.reqOptions = {\n          headers: this.headers\n        };\n        return this.http.post(POST_URL, payload, this.reqOptions).toPromise().then(this.extractData).catch(this.handleErrorPromise);\n      }\n    }\n    extractData(res) {\n      try {\n        if (res && res.json()) {\n          return res.json();\n        } else {\n          return res;\n        }\n      } catch (err) {\n        return res;\n      }\n    }\n    handleErrorPromise(error) {\n      console.error(error.message || error);\n      return Promise.reject(error.message || error);\n    }\n  }\n  CommonService.ɵfac = function CommonService_Factory(t) {\n    return new (t || CommonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  CommonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommonService,\n    factory: CommonService.ɵfac\n  });\n  return CommonService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}